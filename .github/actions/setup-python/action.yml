---
name: setup-python
description: Setup Environment
inputs:
  python-version:
    description: Version of python (leave empty to infer)
    required: false
  fetch-depth:
    description: Fetch depth passed to git checkout
    required: false

outputs:
  python-version:
    value: ${{ steps.detect-python.outputs.version }}
    description: Detected Python version.

runs:
  using: "composite"
  steps:
    - name: Git Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: ${{ inputs.fetch-depth || 0 }}

    - name: Detect Python Version
      id: detect-python
      run: |
        if [[ -z "${{ inputs.python-version }}" ]]; then
          echo "version=$(cat .python-version | tr -d '\n')" >> $GITHUB_OUTPUT
        else
          echo "version=${{ inputs.python-version }}" >> $GITHUB_OUTPUT
        fi
      shell: bash

    - name: Detect Poetry Version
      id: detect-poetry
      run: |
        poetry_version=$(test -f .poetry-version && cat .poetry-version || true | tr -d '\n')
        echo "version=${poetry_version}" >> $GITHUB_OUTPUT
      shell: bash

    - name: Set up Python ${{ steps.detect-python.outputs.version }}
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      with:
        python-version: ${{ steps.detect-python.outputs.version }}

    - name: Poetry Cache
      id: cached-poetry
      uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
      if: steps.detect-poetry.outputs.version != ''
      with:
        path: ~/.local  # the path depends on the OS
        key: ${{ runner.os }}-${{ runner.arch }}-poetry-${{ steps.detect-poetry.outputs.version }}  # increment to reset cache

    - name: Install Poetry
      uses: snok/install-poetry@76e04a911780d5b312d89783f7b1cd627778900a # v1.4.1
      if: steps.detect-poetry.outputs.version != '' && steps.cached-poetry.outputs.cache-hit != 'true'
      with:
        version: ${{ steps.detect-poetry.outputs.version }}
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Install Project
      shell: bash
      run: . script/bootstrap
